
AVRASM ver. 2.1.30  E:\NewWork\HW\MicroLab\05\05-1\Debug\List\5-1.asm Sat Mar 15 17:08:14 2025

E:\NewWork\HW\MicroLab\05\05-1\Debug\List\5-1.asm(1088): warning: Register r5 already defined by the .DEF directive
E:\NewWork\HW\MicroLab\05\05-1\Debug\List\5-1.asm(1089): warning: Register r4 already defined by the .DEF directive
E:\NewWork\HW\MicroLab\05\05-1\Debug\List\5-1.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 6425
000034 003a
000035 6425
000036 2000      	.DB  0x25,0x64,0x3A,0x0,0x25,0x64,0x0,0x20
000037 0020      	.DB  0x20,0x0
                 _0x2000003:
000038 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000039 0002      	.DW  0x02
00003a 0260      	.DW  __base_y_G100
00003b 0070      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
00003c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003d 94f8      	CLI
00003e 27ee      	CLR  R30
00003f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000040 e0f1      	LDI  R31,1
000041 bffb      	OUT  GICR,R31
000042 bfeb      	OUT  GICR,R30
000043 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000044 e08d      	LDI  R24,(14-2)+1
000045 e0a2      	LDI  R26,2
000046 27bb      	CLR  R27
                 __CLEAR_REG:
000047 93ed      	ST   X+,R30
000048 958a      	DEC  R24
000049 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004b e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004d 93ed      	ST   X+,R30
00004e 9701      	SBIW R24,1
00004f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000050 e7e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000051 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000052 9185      	LPM  R24,Z+
000053 9195      	LPM  R25,Z+
000054 9700      	SBIW R24,0
000055 f061      	BREQ __GLOBAL_INI_END
000056 91a5      	LPM  R26,Z+
000057 91b5      	LPM  R27,Z+
000058 9005      	LPM  R0,Z+
000059 9015      	LPM  R1,Z+
00005a 01bf      	MOVW R22,R30
00005b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005c 9005      	LPM  R0,Z+
00005d 920d      	ST   X+,R0
00005e 9701      	SBIW R24,1
00005f f7e1      	BRNE __GLOBAL_INI_LOOP
000060 01fb      	MOVW R30,R22
000061 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000062 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000063 bfed      	OUT  SPL,R30
000064 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000065 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000066 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000067 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000068 940c 006a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <delay.h>
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <lcd.h>
                 ;#include <stdio.h>
                 ;#asm
                     .equ __lcd_port= 0x1B;
                 ; 0000 0007 #endasm
                 ;
                 ;
                 ;void main(void)
                 ; 0000 000B {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000C 
                 ; 0000 000D 
                 ; 0000 000E     while (1)
                 _0x3:
                 ; 0000 000F         {
                 ; 0000 0010             int H = 0;
                 ; 0000 0011             int M = 0;
                 ; 0000 0012             int S = 0;
                 ; 0000 0013             char lcd_buffer[10];
                 ; 0000 0014             lcd_init(16);
00006a 9760      	SBIW R28,16
00006b e0e0      	LDI  R30,LOW(0)
00006c 87ea      	STD  Y+10,R30
00006d 87eb      	STD  Y+11,R30
00006e 87ec      	STD  Y+12,R30
00006f 87ed      	STD  Y+13,R30
000070 87ee      	STD  Y+14,R30
000071 87ef      	STD  Y+15,R30
                 ;	H -> Y+14
                 ;	M -> Y+12
                 ;	S -> Y+10
                 ;	lcd_buffer -> Y+0
000072 e1a0      	LDI  R26,LOW(16)
000073 940e 0188 	CALL _lcd_init
                 ; 0000 0015             lcd_clear();
000075 940e 0128 	CALL _lcd_clear
                 ; 0000 0016 
                 ; 0000 0017              for(H=0; H <=24; H++)
000077 e0e0      	LDI  R30,LOW(0)
000078 87ee      	STD  Y+14,R30
000079 87ef      	STD  Y+14+1,R30
                 _0x7:
00007a 85ae      	LDD  R26,Y+14
00007b 85bf      	LDD  R27,Y+14+1
00007c 9759      	SBIW R26,25
00007d f00c      	BRLT PC+2
00007e c051      	RJMP _0x8
                 ; 0000 0018             {
                 ; 0000 0019                 lcd_gotoxy(6,0);
00007f e0e6      	LDI  R30,LOW(6)
000080 940e 037c 	CALL SUBOPT_0x0
                 ; 0000 001A                 sprintf(lcd_buffer, "%d:", H);
000082 89ea      	LDD  R30,Y+18
000083 89fb      	LDD  R31,Y+18+1
000084 940e 0388 	CALL SUBOPT_0x1
                 ; 0000 001B                 lcd_puts(lcd_buffer);
                 ; 0000 001C 
                 ; 0000 001D                 for(M=0; M <=60; M++)
000086 87ec      	STD  Y+12,R30
000087 87ed      	STD  Y+12+1,R30
                 _0xA:
000088 85ac      	LDD  R26,Y+12
000089 85bd      	LDD  R27,Y+12+1
00008a 97dd      	SBIW R26,61
00008b f5cc      	BRGE _0xB
                 ; 0000 001E                 {
                 ; 0000 001F                     lcd_gotoxy(9,0);
00008c e0e9      	LDI  R30,LOW(9)
00008d 940e 037c 	CALL SUBOPT_0x0
                 ; 0000 0020                     sprintf(lcd_buffer, "%d:", M);
00008f 89e8      	LDD  R30,Y+16
000090 89f9      	LDD  R31,Y+16+1
000091 940e 0388 	CALL SUBOPT_0x1
                 ; 0000 0021                     lcd_puts(lcd_buffer);
                 ; 0000 0022 
                 ; 0000 0023                      for(S=0; S <=60; S++)
000093 87ea      	STD  Y+10,R30
000094 87eb      	STD  Y+10+1,R30
                 _0xD:
000095 85aa      	LDD  R26,Y+10
000096 85bb      	LDD  R27,Y+10+1
000097 97dd      	SBIW R26,61
000098 f50c      	BRGE _0xE
                 ; 0000 0024                     {
                 ; 0000 0025                         lcd_gotoxy(12,0);
000099 e0ec      	LDI  R30,LOW(12)
00009a 940e 0395 	CALL SUBOPT_0x2
                 ; 0000 0026                         sprintf(lcd_buffer, "%d", S);
00009c 01fe      	MOVW R30,R28
00009d 93fa      	ST   -Y,R31
00009e 93ea      	ST   -Y,R30
                +
00009f e6ea     +LDI R30 , LOW ( 2 * _0x0 + ( 4 ) )
0000a0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 4 ) )
                 	__POINTW1FN _0x0,4
0000a1 93fa      	ST   -Y,R31
0000a2 93ea      	ST   -Y,R30
0000a3 85ee      	LDD  R30,Y+14
0000a4 85ff      	LDD  R31,Y+14+1
0000a5 940e 03e4 	CALL __CWD1
0000a7 940e 03f1 	CALL __PUTPARD1
0000a9 e084      	LDI  R24,4
0000aa 940e 032f 	CALL _sprintf
0000ac 9628      	ADIW R28,8
                 ; 0000 0027                         lcd_puts(lcd_buffer);
0000ad 01de      	MOVW R26,R28
0000ae 940e 0155 	CALL _lcd_puts
                 ; 0000 0028                         delay_ms(5);
0000b0 e0a5      	LDI  R26,LOW(5)
0000b1 e0b0      	LDI  R27,0
0000b2 940e 03d2 	CALL _delay_ms
                 ; 0000 0029                     }
0000b4 85ea      	LDD  R30,Y+10
0000b5 85fb      	LDD  R31,Y+10+1
0000b6 9631      	ADIW R30,1
0000b7 87ea      	STD  Y+10,R30
0000b8 87fb      	STD  Y+10+1,R31
0000b9 cfdb      	RJMP _0xD
                 _0xE:
                 ; 0000 002A                     lcd_gotoxy(12,0);
0000ba e0ec      	LDI  R30,LOW(12)
0000bb 940e 0395 	CALL SUBOPT_0x2
                 ; 0000 002B                     lcd_putsf("  ");
0000bd 940e 0399 	CALL SUBOPT_0x3
                 ; 0000 002C                 }
0000bf 85ec      	LDD  R30,Y+12
0000c0 85fd      	LDD  R31,Y+12+1
0000c1 9631      	ADIW R30,1
0000c2 87ec      	STD  Y+12,R30
0000c3 87fd      	STD  Y+12+1,R31
0000c4 cfc3      	RJMP _0xA
                 _0xB:
                 ; 0000 002D                 lcd_gotoxy(9,0);
0000c5 e0e9      	LDI  R30,LOW(9)
0000c6 940e 0395 	CALL SUBOPT_0x2
                 ; 0000 002E                 lcd_putsf("  ");
0000c8 940e 0399 	CALL SUBOPT_0x3
                 ; 0000 002F             }
0000ca 85ee      	LDD  R30,Y+14
0000cb 85ff      	LDD  R31,Y+14+1
0000cc 9631      	ADIW R30,1
0000cd 87ee      	STD  Y+14,R30
0000ce 87ff      	STD  Y+14+1,R31
0000cf cfaa      	RJMP _0x7
                 _0x8:
                 ; 0000 0030             lcd_gotoxy(6,0);
0000d0 e0e6      	LDI  R30,LOW(6)
0000d1 940e 0395 	CALL SUBOPT_0x2
                 ; 0000 0031             lcd_putsf("  ");
0000d3 940e 0399 	CALL SUBOPT_0x3
                 ; 0000 0032         }
0000d5 9660      	ADIW R28,16
0000d6 cf93      	RJMP _0x3
                 ; 0000 0033     }
                 _0xF:
0000d7 cfff      	RJMP _0xF
                 ; .FEND
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G100:
                 ; .FSTART __lcd_delay_G100
0000d8 e0ff          ldi   r31,15
                 __lcd_delay0:
0000d9 95fa          dec   r31
0000da f7f1          brne  __lcd_delay0
0000db 9508      	RET
                 ; .FEND
                 __lcd_ready:
                 ; .FSTART __lcd_ready
0000dc b3aa          in    r26,__lcd_direction
0000dd 70af          andi  r26,0xf                 ;set as input
0000de bbaa          out   __lcd_direction,r26
0000df 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
0000e0 98d8          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
0000e1 dff6      	RCALL __lcd_delay_G100
0000e2 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
0000e3 dff4      	RCALL __lcd_delay_G100
0000e4 b3a9          in    r26,__lcd_pin
0000e5 98da          cbi   __lcd_port,__lcd_enable ;EN=0
0000e6 dff1      	RCALL __lcd_delay_G100
0000e7 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
0000e8 dfef      	RCALL __lcd_delay_G100
0000e9 98da          cbi   __lcd_port,__lcd_enable ;EN=0
0000ea fda7          sbrc  r26,__lcd_busy_flag
0000eb cff5          rjmp  __lcd_busy
0000ec 9508      	RET
                 ; .FEND
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000ed 7fa0          andi  r26,0xf0
0000ee 2bab          or    r26,r27
0000ef bbab          out   __lcd_port,r26          ;write
0000f0 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
0000f1 940e 00d8 	CALL __lcd_delay_G100
0000f3 98da          cbi   __lcd_port,__lcd_enable ;EN=0
0000f4 940e 00d8 	CALL __lcd_delay_G100
0000f6 9508      	RET
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000f7 93aa      	ST   -Y,R26
0000f8 98d9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
0000f9 b3aa          in    r26,__lcd_direction
0000fa 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
0000fb bbaa          out   __lcd_direction,r26
0000fc b3bb          in    r27,__lcd_port
0000fd 70bf          andi  r27,0xf
0000fe 81a8          ld    r26,y
0000ff dfed      	RCALL __lcd_write_nibble_G100
000100 81a8          ld    r26,y
000101 95a2          swap  r26
000102 dfea      	RCALL __lcd_write_nibble_G100
000103 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
000104 940c 01b9 	JMP  _0x2080002
                 ; .FEND
                 __lcd_read_nibble_G100:
                 ; .FSTART __lcd_read_nibble_G100
000106 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
000107 940e 00d8 	CALL __lcd_delay_G100
000109 b3e9          in    r30,__lcd_pin           ;read
00010a 98da          cbi   __lcd_port,__lcd_enable ;EN=0
00010b 940e 00d8 	CALL __lcd_delay_G100
00010d 7fe0          andi  r30,0xf0
00010e 9508      	RET
                 ; .FEND
                 _lcd_read_byte0_G100:
                 ; .FSTART _lcd_read_byte0_G100
00010f 940e 00d8 	CALL __lcd_delay_G100
000111 dff4      	RCALL __lcd_read_nibble_G100
000112 2fae          mov   r26,r30
000113 dff2      	RCALL __lcd_read_nibble_G100
000114 98d9          cbi   __lcd_port,__lcd_rd     ;RD=0
000115 95e2          swap  r30
000116 2bea          or    r30,r26
000117 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000118 93aa      	ST   -Y,R26
000119 940e 00dc 	CALL __lcd_ready
00011b 81e8      	LD   R30,Y
00011c e0f0      	LDI  R31,0
00011d 5ae0      	SUBI R30,LOW(-__base_y_G100)
00011e 4ffd      	SBCI R31,HIGH(-__base_y_G100)
00011f 81e0      	LD   R30,Z
000120 81a9      	LDD  R26,Y+1
000121 0fae      	ADD  R26,R30
000122 940e 00f7 	CALL __lcd_write_data
000124 8059      	LDD  R5,Y+1
000125 8048      	LDD  R4,Y+0
000126 9622      	ADIW R28,2
000127 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000128 940e 00dc 	CALL __lcd_ready
00012a e0a2      	LDI  R26,LOW(2)
00012b 940e 00f7 	CALL __lcd_write_data
00012d 940e 00dc 	CALL __lcd_ready
00012f e0ac      	LDI  R26,LOW(12)
000130 940e 00f7 	CALL __lcd_write_data
000132 940e 00dc 	CALL __lcd_ready
000134 e0a1      	LDI  R26,LOW(1)
000135 940e 00f7 	CALL __lcd_write_data
000137 e0e0      	LDI  R30,LOW(0)
000138 2e4e      	MOV  R4,R30
000139 2e5e      	MOV  R5,R30
00013a 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00013b 93aa      	ST   -Y,R26
00013c 93ef          push r30
00013d 93ff          push r31
00013e 81a8          ld   r26,y
00013f 9468          set
000140 30aa          cpi  r26,10
000141 f019          breq __lcd_putchar1
000142 94e8          clt
000143 1457      	CP   R5,R7
000144 f030      	BRLO _0x2000004
                 	__lcd_putchar1:
000145 9443      	INC  R4
000146 e0e0      	LDI  R30,LOW(0)
000147 93ea      	ST   -Y,R30
000148 2da4      	MOV  R26,R4
000149 dfce      	RCALL _lcd_gotoxy
00014a f036      	brts __lcd_putchar0
                 _0x2000004:
00014b 9453      	INC  R5
00014c df8f          rcall __lcd_ready
00014d 9ad8          sbi  __lcd_port,__lcd_rs ;RS=1
00014e 81a8      	LD   R26,Y
00014f 940e 00f7 	CALL __lcd_write_data
                 __lcd_putchar0:
000151 91ff          pop  r31
000152 91ef          pop  r30
000153 940c 01b9 	JMP  _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000155 93ba      	ST   -Y,R27
000156 93aa      	ST   -Y,R26
000157 931a      	ST   -Y,R17
                 _0x2000005:
000158 81a9      	LDD  R26,Y+1
000159 81ba      	LDD  R27,Y+1+1
00015a 91ed      	LD   R30,X+
00015b 83a9      	STD  Y+1,R26
00015c 83ba      	STD  Y+1+1,R27
00015d 2f1e      	MOV  R17,R30
00015e 30e0      	CPI  R30,0
00015f f019      	BREQ _0x2000007
000160 2fa1      	MOV  R26,R17
000161 dfd9      	RCALL _lcd_putchar
000162 cff5      	RJMP _0x2000005
                 _0x2000007:
000163 c010      	RJMP _0x2080003
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
000164 93ba      	ST   -Y,R27
000165 93aa      	ST   -Y,R26
000166 931a      	ST   -Y,R17
                 _0x2000008:
000167 81e9      	LDD  R30,Y+1
000168 81fa      	LDD  R31,Y+1+1
000169 9631      	ADIW R30,1
00016a 83e9      	STD  Y+1,R30
00016b 83fa      	STD  Y+1+1,R31
00016c 9731      	SBIW R30,1
00016d 91e4      	LPM  R30,Z
00016e 2f1e      	MOV  R17,R30
00016f 30e0      	CPI  R30,0
000170 f019      	BREQ _0x200000A
000171 2fa1      	MOV  R26,R17
000172 dfc8      	RCALL _lcd_putchar
000173 cff3      	RJMP _0x2000008
                 _0x200000A:
                 _0x2080003:
000174 8118      	LDD  R17,Y+0
000175 9623      	ADIW R28,3
000176 9508      	RET
                 ; .FEND
                 __long_delay_G100:
                 ; .FSTART __long_delay_G100
000177 27aa          clr   r26
000178 27bb          clr   r27
                 __long_delay0:
000179 9711          sbiw  r26,1         ;2 cycles
00017a f7f1          brne  __long_delay0 ;2 cycles
00017b 9508      	RET
                 ; .FEND
                 __lcd_init_write_G100:
                 ; .FSTART __lcd_init_write_G100
00017c 93aa      	ST   -Y,R26
00017d 98d9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
00017e b3aa          in    r26,__lcd_direction
00017f 6fa7          ori   r26,0xf7                ;set as output
000180 bbaa          out   __lcd_direction,r26
000181 b3bb          in    r27,__lcd_port
000182 70bf          andi  r27,0xf
000183 81a8          ld    r26,y
000184 940e 00ed 	CALL __lcd_write_nibble_G100
000186 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
000187 c031      	RJMP _0x2080002
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000188 93aa      	ST   -Y,R26
000189 98da          cbi   __lcd_port,__lcd_enable ;EN=0
00018a 98d8          cbi   __lcd_port,__lcd_rs     ;RS=0
00018b 8078      	LDD  R7,Y+0
00018c 81e8      	LD   R30,Y
00018d 58e0      	SUBI R30,-LOW(128)
                +
00018e 93e0 0262+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000190 81e8      	LD   R30,Y
000191 54e0      	SUBI R30,-LOW(192)
                +
000192 93e0 0263+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000194 940e 039d 	CALL SUBOPT_0x4
000196 940e 039d 	CALL SUBOPT_0x4
000198 940e 039d 	CALL SUBOPT_0x4
00019a dfdc      	RCALL __long_delay_G100
00019b e2a0      	LDI  R26,LOW(32)
00019c dfdf      	RCALL __lcd_init_write_G100
00019d dfd9      	RCALL __long_delay_G100
00019e e2a8      	LDI  R26,LOW(40)
00019f 940e 03a2 	CALL SUBOPT_0x5
0001a1 e0a4      	LDI  R26,LOW(4)
0001a2 940e 03a2 	CALL SUBOPT_0x5
0001a4 e8a5      	LDI  R26,LOW(133)
0001a5 940e 03a2 	CALL SUBOPT_0x5
0001a7 b3aa          in    r26,__lcd_direction
0001a8 70af          andi  r26,0xf                 ;set as input
0001a9 bbaa          out   __lcd_direction,r26
0001aa 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
0001ab 940e 010f 	CALL _lcd_read_byte0_G100
0001ad 30e5      	CPI  R30,LOW(0x5)
0001ae f011      	BREQ _0x200000B
0001af e0e0      	LDI  R30,LOW(0)
0001b0 c008      	RJMP _0x2080002
                 _0x200000B:
0001b1 940e 00dc 	CALL __lcd_ready
0001b3 e0a6      	LDI  R26,LOW(6)
0001b4 940e 00f7 	CALL __lcd_write_data
0001b6 940e 0128 	CALL _lcd_clear
0001b8 e0e1      	LDI  R30,LOW(1)
                 _0x2080002:
0001b9 9621      	ADIW R28,1
0001ba 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0001bb 93ba      	ST   -Y,R27
0001bc 93aa      	ST   -Y,R26
0001bd 931a      	ST   -Y,R17
0001be 930a      	ST   -Y,R16
0001bf 81aa      	LDD  R26,Y+2
0001c0 81bb      	LDD  R27,Y+2+1
0001c1 9612      	ADIW R26,2
0001c2 940e 03e9 	CALL __GETW1P
0001c4 9730      	SBIW R30,0
0001c5 f159      	BREQ _0x2020010
0001c6 81aa      	LDD  R26,Y+2
0001c7 81bb      	LDD  R27,Y+2+1
0001c8 9614      	ADIW R26,4
0001c9 940e 03e9 	CALL __GETW1P
0001cb 018f      	MOVW R16,R30
0001cc 9730      	SBIW R30,0
0001cd f061      	BREQ _0x2020012
                +
0001ce 3002     +CPI R16 , LOW ( 2 )
0001cf e0e0     +LDI R30 , HIGH ( 2 )
0001d0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001d1 f098      	BRLO _0x2020013
0001d2 01f8      	MOVW R30,R16
0001d3 9731      	SBIW R30,1
0001d4 018f      	MOVW R16,R30
                +
0001d5 81aa     +LDD R26 , Y + 2
0001d6 81bb     +LDD R27 , Y + 2 + 1
0001d7 9614     +ADIW R26 , 4
0001d8 93ed     +ST X + , R30
0001d9 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0001da 81aa      	LDD  R26,Y+2
0001db 81bb      	LDD  R27,Y+2+1
0001dc 9612      	ADIW R26,2
0001dd 91ed      	LD   R30,X+
0001de 91fd      	LD   R31,X+
0001df 9631      	ADIW R30,1
0001e0 93fe      	ST   -X,R31
0001e1 93ee      	ST   -X,R30
0001e2 9731      	SBIW R30,1
0001e3 81ac      	LDD  R26,Y+4
0001e4 83a0      	STD  Z+0,R26
                 _0x2020013:
0001e5 81aa      	LDD  R26,Y+2
0001e6 81bb      	LDD  R27,Y+2+1
0001e7 940e 03e9 	CALL __GETW1P
0001e9 23ff      	TST  R31
0001ea f02a      	BRMI _0x2020014
0001eb 91ed      	LD   R30,X+
0001ec 91fd      	LD   R31,X+
0001ed 9631      	ADIW R30,1
0001ee 93fe      	ST   -X,R31
0001ef 93ee      	ST   -X,R30
                 _0x2020014:
0001f0 c006      	RJMP _0x2020015
                 _0x2020010:
0001f1 81aa      	LDD  R26,Y+2
0001f2 81bb      	LDD  R27,Y+2+1
0001f3 efef      	LDI  R30,LOW(65535)
0001f4 efff      	LDI  R31,HIGH(65535)
0001f5 93ed      	ST   X+,R30
0001f6 93fc      	ST   X,R31
                 _0x2020015:
0001f7 8119      	LDD  R17,Y+1
0001f8 8108      	LDD  R16,Y+0
0001f9 9625      	ADIW R28,5
0001fa 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0001fb 93ba      	ST   -Y,R27
0001fc 93aa      	ST   -Y,R26
0001fd 9726      	SBIW R28,6
0001fe 940e 03f6 	CALL __SAVELOCR6
000200 e010      	LDI  R17,0
000201 85ac      	LDD  R26,Y+12
000202 85bd      	LDD  R27,Y+12+1
000203 e0e0      	LDI  R30,LOW(0)
000204 e0f0      	LDI  R31,HIGH(0)
000205 93ed      	ST   X+,R30
000206 93fc      	ST   X,R31
                 _0x2020016:
000207 89ea      	LDD  R30,Y+18
000208 89fb      	LDD  R31,Y+18+1
000209 9631      	ADIW R30,1
00020a 8bea      	STD  Y+18,R30
00020b 8bfb      	STD  Y+18+1,R31
00020c 9731      	SBIW R30,1
00020d 91e4      	LPM  R30,Z
00020e 2f2e      	MOV  R18,R30
00020f 30e0      	CPI  R30,0
000210 f409      	BRNE PC+2
000211 c115      	RJMP _0x2020018
000212 2fe1      	MOV  R30,R17
000213 30e0      	CPI  R30,0
000214 f439      	BRNE _0x202001C
000215 3225      	CPI  R18,37
000216 f411      	BRNE _0x202001D
000217 e011      	LDI  R17,LOW(1)
000218 c002      	RJMP _0x202001E
                 _0x202001D:
000219 940e 03a6 	CALL SUBOPT_0x6
                 _0x202001E:
00021b c10a      	RJMP _0x202001B
                 _0x202001C:
00021c 30e1      	CPI  R30,LOW(0x1)
00021d f4a9      	BRNE _0x202001F
00021e 3225      	CPI  R18,37
00021f f419      	BRNE _0x2020020
000220 940e 03a6 	CALL SUBOPT_0x6
000222 c102      	RJMP _0x20200CC
                 _0x2020020:
000223 e012      	LDI  R17,LOW(2)
000224 e040      	LDI  R20,LOW(0)
000225 e000      	LDI  R16,LOW(0)
000226 322d      	CPI  R18,45
000227 f411      	BRNE _0x2020021
000228 e001      	LDI  R16,LOW(1)
000229 c0fc      	RJMP _0x202001B
                 _0x2020021:
00022a 322b      	CPI  R18,43
00022b f411      	BRNE _0x2020022
00022c e24b      	LDI  R20,LOW(43)
00022d c0f8      	RJMP _0x202001B
                 _0x2020022:
00022e 3220      	CPI  R18,32
00022f f411      	BRNE _0x2020023
000230 e240      	LDI  R20,LOW(32)
000231 c0f4      	RJMP _0x202001B
                 _0x2020023:
000232 c002      	RJMP _0x2020024
                 _0x202001F:
000233 30e2      	CPI  R30,LOW(0x2)
000234 f439      	BRNE _0x2020025
                 _0x2020024:
000235 e050      	LDI  R21,LOW(0)
000236 e013      	LDI  R17,LOW(3)
000237 3320      	CPI  R18,48
000238 f411      	BRNE _0x2020026
000239 6800      	ORI  R16,LOW(128)
00023a c0eb      	RJMP _0x202001B
                 _0x2020026:
00023b c003      	RJMP _0x2020027
                 _0x2020025:
00023c 30e3      	CPI  R30,LOW(0x3)
00023d f009      	BREQ PC+2
00023e c0e7      	RJMP _0x202001B
                 _0x2020027:
00023f 3320      	CPI  R18,48
000240 f010      	BRLO _0x202002A
000241 332a      	CPI  R18,58
000242 f008      	BRLO _0x202002B
                 _0x202002A:
000243 c007      	RJMP _0x2020029
                 _0x202002B:
000244 e0aa      	LDI  R26,LOW(10)
000245 9f5a      	MUL  R21,R26
000246 2d50      	MOV  R21,R0
000247 2fe2      	MOV  R30,R18
000248 53e0      	SUBI R30,LOW(48)
000249 0f5e      	ADD  R21,R30
00024a c0db      	RJMP _0x202001B
                 _0x2020029:
00024b 2fe2      	MOV  R30,R18
00024c 36e3      	CPI  R30,LOW(0x63)
00024d f449      	BRNE _0x202002F
00024e 940e 03ad 	CALL SUBOPT_0x7
000250 89e8      	LDD  R30,Y+16
000251 89f9      	LDD  R31,Y+16+1
000252 81a4      	LDD  R26,Z+4
000253 93aa      	ST   -Y,R26
000254 940e 03b3 	CALL SUBOPT_0x8
000256 c0ce      	RJMP _0x2020030
                 _0x202002F:
000257 37e3      	CPI  R30,LOW(0x73)
000258 f441      	BRNE _0x2020032
000259 940e 03ad 	CALL SUBOPT_0x7
00025b 940e 03b9 	CALL SUBOPT_0x9
00025d 940e 0363 	CALL _strlen
00025f 2f1e      	MOV  R17,R30
000260 c00a      	RJMP _0x2020033
                 _0x2020032:
000261 37e0      	CPI  R30,LOW(0x70)
000262 f461      	BRNE _0x2020035
000263 940e 03ad 	CALL SUBOPT_0x7
000265 940e 03b9 	CALL SUBOPT_0x9
000267 940e 036f 	CALL _strlenf
000269 2f1e      	MOV  R17,R30
00026a 6008      	ORI  R16,LOW(8)
                 _0x2020033:
00026b 6002      	ORI  R16,LOW(2)
00026c 770f      	ANDI R16,LOW(127)
00026d e030      	LDI  R19,LOW(0)
00026e c034      	RJMP _0x2020036
                 _0x2020035:
00026f 36e4      	CPI  R30,LOW(0x64)
000270 f011      	BREQ _0x2020039
000271 36e9      	CPI  R30,LOW(0x69)
000272 f411      	BRNE _0x202003A
                 _0x2020039:
000273 6004      	ORI  R16,LOW(4)
000274 c002      	RJMP _0x202003B
                 _0x202003A:
000275 37e5      	CPI  R30,LOW(0x75)
000276 f431      	BRNE _0x202003C
                 _0x202003B:
000277 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
000278 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000279 83ee      	STD  Y+6,R30
00027a 83ff      	STD  Y+6+1,R31
00027b e015      	LDI  R17,LOW(5)
00027c c00c      	RJMP _0x202003D
                 _0x202003C:
00027d 35e8      	CPI  R30,LOW(0x58)
00027e f411      	BRNE _0x202003F
00027f 6008      	ORI  R16,LOW(8)
000280 c003      	RJMP _0x2020040
                 _0x202003F:
000281 37e8      	CPI  R30,LOW(0x78)
000282 f009      	BREQ PC+2
000283 c0a1      	RJMP _0x2020071
                 _0x2020040:
000284 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000285 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000286 83ee      	STD  Y+6,R30
000287 83ff      	STD  Y+6+1,R31
000288 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000289 ff02      	SBRS R16,2
00028a c014      	RJMP _0x2020042
00028b 940e 03ad 	CALL SUBOPT_0x7
00028d 940e 03c3 	CALL SUBOPT_0xA
00028f 85ab      	LDD  R26,Y+11
000290 23aa      	TST  R26
000291 f43a      	BRPL _0x2020043
000292 85ea      	LDD  R30,Y+10
000293 85fb      	LDD  R31,Y+10+1
000294 940e 03e0 	CALL __ANEGW1
000296 87ea      	STD  Y+10,R30
000297 87fb      	STD  Y+10+1,R31
000298 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000299 3040      	CPI  R20,0
00029a f011      	BREQ _0x2020044
00029b 5f1f      	SUBI R17,-LOW(1)
00029c c001      	RJMP _0x2020045
                 _0x2020044:
00029d 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
00029e c004      	RJMP _0x2020046
                 _0x2020042:
00029f 940e 03ad 	CALL SUBOPT_0x7
0002a1 940e 03c3 	CALL SUBOPT_0xA
                 _0x2020046:
                 _0x2020036:
0002a3 fd00      	SBRC R16,0
0002a4 c011      	RJMP _0x2020047
                 _0x2020048:
0002a5 1715      	CP   R17,R21
0002a6 f478      	BRSH _0x202004A
0002a7 ff07      	SBRS R16,7
0002a8 c008      	RJMP _0x202004B
0002a9 ff02      	SBRS R16,2
0002aa c004      	RJMP _0x202004C
0002ab 7f0b      	ANDI R16,LOW(251)
0002ac 2f24      	MOV  R18,R20
0002ad 5011      	SUBI R17,LOW(1)
0002ae c001      	RJMP _0x202004D
                 _0x202004C:
0002af e320      	LDI  R18,LOW(48)
                 _0x202004D:
0002b0 c001      	RJMP _0x202004E
                 _0x202004B:
0002b1 e220      	LDI  R18,LOW(32)
                 _0x202004E:
0002b2 940e 03a6 	CALL SUBOPT_0x6
0002b4 5051      	SUBI R21,LOW(1)
0002b5 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
0002b6 2f31      	MOV  R19,R17
0002b7 ff01      	SBRS R16,1
0002b8 c017      	RJMP _0x202004F
                 _0x2020050:
0002b9 3030      	CPI  R19,0
0002ba f0a1      	BREQ _0x2020052
0002bb ff03      	SBRS R16,3
0002bc c006      	RJMP _0x2020053
0002bd 81ee      	LDD  R30,Y+6
0002be 81ff      	LDD  R31,Y+6+1
0002bf 9125      	LPM  R18,Z+
0002c0 83ee      	STD  Y+6,R30
0002c1 83ff      	STD  Y+6+1,R31
0002c2 c005      	RJMP _0x2020054
                 _0x2020053:
0002c3 81ae      	LDD  R26,Y+6
0002c4 81bf      	LDD  R27,Y+6+1
0002c5 912d      	LD   R18,X+
0002c6 83ae      	STD  Y+6,R26
0002c7 83bf      	STD  Y+6+1,R27
                 _0x2020054:
0002c8 940e 03a6 	CALL SUBOPT_0x6
0002ca 3050      	CPI  R21,0
0002cb f009      	BREQ _0x2020055
0002cc 5051      	SUBI R21,LOW(1)
                 _0x2020055:
0002cd 5031      	SUBI R19,LOW(1)
0002ce cfea      	RJMP _0x2020050
                 _0x2020052:
0002cf c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
0002d0 e320      	LDI  R18,LOW(48)
0002d1 81ee      	LDD  R30,Y+6
0002d2 81ff      	LDD  R31,Y+6+1
0002d3 940e 03ed 	CALL __GETW1PF
0002d5 87e8      	STD  Y+8,R30
0002d6 87f9      	STD  Y+8+1,R31
0002d7 81ee      	LDD  R30,Y+6
0002d8 81ff      	LDD  R31,Y+6+1
0002d9 9632      	ADIW R30,2
0002da 83ee      	STD  Y+6,R30
0002db 83ff      	STD  Y+6+1,R31
                 _0x202005A:
0002dc 85e8      	LDD  R30,Y+8
0002dd 85f9      	LDD  R31,Y+8+1
0002de 85aa      	LDD  R26,Y+10
0002df 85bb      	LDD  R27,Y+10+1
0002e0 17ae      	CP   R26,R30
0002e1 07bf      	CPC  R27,R31
0002e2 f050      	BRLO _0x202005C
0002e3 5f2f      	SUBI R18,-LOW(1)
0002e4 85a8      	LDD  R26,Y+8
0002e5 85b9      	LDD  R27,Y+8+1
0002e6 85ea      	LDD  R30,Y+10
0002e7 85fb      	LDD  R31,Y+10+1
0002e8 1bea      	SUB  R30,R26
0002e9 0bfb      	SBC  R31,R27
0002ea 87ea      	STD  Y+10,R30
0002eb 87fb      	STD  Y+10+1,R31
0002ec cfef      	RJMP _0x202005A
                 _0x202005C:
0002ed 332a      	CPI  R18,58
0002ee f028      	BRLO _0x202005D
0002ef ff03      	SBRS R16,3
0002f0 c002      	RJMP _0x202005E
0002f1 5f29      	SUBI R18,-LOW(7)
0002f2 c001      	RJMP _0x202005F
                 _0x202005E:
0002f3 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0002f4 fd04      	SBRC R16,4
0002f5 c01a      	RJMP _0x2020061
0002f6 3321      	CPI  R18,49
0002f7 f420      	BRSH _0x2020063
0002f8 85a8      	LDD  R26,Y+8
0002f9 85b9      	LDD  R27,Y+8+1
0002fa 9711      	SBIW R26,1
0002fb f409      	BRNE _0x2020062
                 _0x2020063:
0002fc c009      	RJMP _0x20200CD
                 _0x2020062:
0002fd 1753      	CP   R21,R19
0002fe f010      	BRLO _0x2020067
0002ff ff00      	SBRS R16,0
000300 c001      	RJMP _0x2020068
                 _0x2020067:
000301 c013      	RJMP _0x2020066
                 _0x2020068:
000302 e220      	LDI  R18,LOW(32)
000303 ff07      	SBRS R16,7
000304 c00b      	RJMP _0x2020069
000305 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
000306 6100      	ORI  R16,LOW(16)
000307 ff02      	SBRS R16,2
000308 c007      	RJMP _0x202006A
000309 7f0b      	ANDI R16,LOW(251)
00030a 934a      	ST   -Y,R20
00030b 940e 03b3 	CALL SUBOPT_0x8
00030d 3050      	CPI  R21,0
00030e f009      	BREQ _0x202006B
00030f 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000310 940e 03a6 	CALL SUBOPT_0x6
000312 3050      	CPI  R21,0
000313 f009      	BREQ _0x202006C
000314 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000315 5031      	SUBI R19,LOW(1)
000316 85a8      	LDD  R26,Y+8
000317 85b9      	LDD  R27,Y+8+1
000318 9712      	SBIW R26,2
000319 f008      	BRLO _0x2020059
00031a cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
00031b ff00      	SBRS R16,0
00031c c008      	RJMP _0x202006D
                 _0x202006E:
00031d 3050      	CPI  R21,0
00031e f031      	BREQ _0x2020070
00031f 5051      	SUBI R21,LOW(1)
000320 e2e0      	LDI  R30,LOW(32)
000321 93ea      	ST   -Y,R30
000322 940e 03b3 	CALL SUBOPT_0x8
000324 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
000325 e010      	LDI  R17,LOW(0)
                 _0x202001B:
000326 cee0      	RJMP _0x2020016
                 _0x2020018:
000327 85ac      	LDD  R26,Y+12
000328 85bd      	LDD  R27,Y+12+1
000329 940e 03e9 	CALL __GETW1P
00032b 940e 03fd 	CALL __LOADLOCR6
00032d 9664      	ADIW R28,20
00032e 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00032f 92ff      	PUSH R15
000330 2ef8      	MOV  R15,R24
000331 9726      	SBIW R28,6
000332 940e 03f8 	CALL __SAVELOCR4
000334 940e 03cb 	CALL SUBOPT_0xB
000336 9730      	SBIW R30,0
000337 f419      	BRNE _0x2020072
000338 efef      	LDI  R30,LOW(65535)
000339 efff      	LDI  R31,HIGH(65535)
00033a c023      	RJMP _0x2080001
                 _0x2020072:
00033b 01de      	MOVW R26,R28
00033c 9616      	ADIW R26,6
00033d 940e 03dc 	CALL __ADDW2R15
00033f 018d      	MOVW R16,R26
000340 940e 03cb 	CALL SUBOPT_0xB
000342 83ee      	STD  Y+6,R30
000343 83ff      	STD  Y+6+1,R31
000344 e0e0      	LDI  R30,LOW(0)
000345 87e8      	STD  Y+8,R30
000346 87e9      	STD  Y+8+1,R30
000347 01de      	MOVW R26,R28
000348 961a      	ADIW R26,10
000349 940e 03dc 	CALL __ADDW2R15
00034b 940e 03e9 	CALL __GETW1P
00034d 93fa      	ST   -Y,R31
00034e 93ea      	ST   -Y,R30
00034f 931a      	ST   -Y,R17
000350 930a      	ST   -Y,R16
000351 ebeb      	LDI  R30,LOW(_put_buff_G101)
000352 e0f1      	LDI  R31,HIGH(_put_buff_G101)
000353 93fa      	ST   -Y,R31
000354 93ea      	ST   -Y,R30
000355 01de      	MOVW R26,R28
000356 961a      	ADIW R26,10
000357 dea3      	RCALL __print_G101
000358 019f      	MOVW R18,R30
000359 81ae      	LDD  R26,Y+6
00035a 81bf      	LDD  R27,Y+6+1
00035b e0e0      	LDI  R30,LOW(0)
00035c 93ec      	ST   X,R30
00035d 01f9      	MOVW R30,R18
                 _0x2080001:
00035e 940e 03ff 	CALL __LOADLOCR4
000360 962a      	ADIW R28,10
000361 90ff      	POP  R15
000362 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000363 93ba      	ST   -Y,R27
000364 93aa      	ST   -Y,R26
000365 91a9          ld   r26,y+
000366 91b9          ld   r27,y+
000367 27ee          clr  r30
000368 27ff          clr  r31
                 strlen0:
000369 916d          ld   r22,x+
00036a 2366          tst  r22
00036b f011          breq strlen1
00036c 9631          adiw r30,1
00036d cffb          rjmp strlen0
                 strlen1:
00036e 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00036f 93ba      	ST   -Y,R27
000370 93aa      	ST   -Y,R26
000371 27aa          clr  r26
000372 27bb          clr  r27
000373 91e9          ld   r30,y+
000374 91f9          ld   r31,y+
                 strlenf0:
000375 9005      	lpm  r0,z+
000376 2000          tst  r0
000377 f011          breq strlenf1
000378 9611          adiw r26,1
000379 cffb          rjmp strlenf0
                 strlenf1:
00037a 01fd          movw r30,r26
00037b 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G100:
000260           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x0:
00037c 93ea      	ST   -Y,R30
00037d e0a0      	LDI  R26,LOW(0)
00037e 940e 0118 	CALL _lcd_gotoxy
000380 01fe      	MOVW R30,R28
000381 93fa      	ST   -Y,R31
000382 93ea      	ST   -Y,R30
                +
000383 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000384 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000385 93fa      	ST   -Y,R31
000386 93ea      	ST   -Y,R30
000387 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x1:
000388 940e 03e4 	CALL __CWD1
00038a 940e 03f1 	CALL __PUTPARD1
00038c e084      	LDI  R24,4
00038d 940e 032f 	CALL _sprintf
00038f 9628      	ADIW R28,8
000390 01de      	MOVW R26,R28
000391 940e 0155 	CALL _lcd_puts
000393 e0e0      	LDI  R30,LOW(0)
000394 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000395 93ea      	ST   -Y,R30
000396 e0a0      	LDI  R26,LOW(0)
000397 940c 0118 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
                +
000399 e6ad     +LDI R26 , LOW ( 2 * _0x0 + ( 7 ) )
00039a e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 7 ) )
                 	__POINTW2FN _0x0,7
00039b 940c 0164 	JMP  _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
00039d 940e 0177 	CALL __long_delay_G100
00039f e3a0      	LDI  R26,LOW(48)
0003a0 940c 017c 	JMP  __lcd_init_write_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
0003a2 940e 00f7 	CALL __lcd_write_data
0003a4 940c 0177 	JMP  __long_delay_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x6:
0003a6 932a      	ST   -Y,R18
0003a7 85ad      	LDD  R26,Y+13
0003a8 85be      	LDD  R27,Y+13+1
0003a9 85ef      	LDD  R30,Y+15
0003aa 89f8      	LDD  R31,Y+15+1
0003ab 9509      	ICALL
0003ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x7:
0003ad 89e8      	LDD  R30,Y+16
0003ae 89f9      	LDD  R31,Y+16+1
0003af 9734      	SBIW R30,4
0003b0 8be8      	STD  Y+16,R30
0003b1 8bf9      	STD  Y+16+1,R31
0003b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
0003b3 85ad      	LDD  R26,Y+13
0003b4 85be      	LDD  R27,Y+13+1
0003b5 85ef      	LDD  R30,Y+15
0003b6 89f8      	LDD  R31,Y+15+1
0003b7 9509      	ICALL
0003b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x9:
0003b9 89a8      	LDD  R26,Y+16
0003ba 89b9      	LDD  R27,Y+16+1
0003bb 9614      	ADIW R26,4
0003bc 940e 03e9 	CALL __GETW1P
0003be 83ee      	STD  Y+6,R30
0003bf 83ff      	STD  Y+6+1,R31
0003c0 81ae      	LDD  R26,Y+6
0003c1 81bf      	LDD  R27,Y+6+1
0003c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xA:
0003c3 89a8      	LDD  R26,Y+16
0003c4 89b9      	LDD  R27,Y+16+1
0003c5 9614      	ADIW R26,4
0003c6 940e 03e9 	CALL __GETW1P
0003c8 87ea      	STD  Y+10,R30
0003c9 87fb      	STD  Y+10+1,R31
0003ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
0003cb 01de      	MOVW R26,R28
0003cc 961c      	ADIW R26,12
0003cd 940e 03dc 	CALL __ADDW2R15
0003cf 940e 03e9 	CALL __GETW1P
0003d1 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0003d2 9610      	adiw r26,0
0003d3 f039      	breq __delay_ms1
                 __delay_ms0:
0003d4 95a8      	wdr
                +
0003d5 ed80     +LDI R24 , LOW ( 0x7D0 )
0003d6 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0003d7 9701     +SBIW R24 , 1
0003d8 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0003d9 9711      	sbiw r26,1
0003da f7c9      	brne __delay_ms0
                 __delay_ms1:
0003db 9508      	ret
                 
                 __ADDW2R15:
0003dc 2400      	CLR  R0
0003dd 0daf      	ADD  R26,R15
0003de 1db0      	ADC  R27,R0
0003df 9508      	RET
                 
                 __ANEGW1:
0003e0 95f1      	NEG  R31
0003e1 95e1      	NEG  R30
0003e2 40f0      	SBCI R31,0
0003e3 9508      	RET
                 
                 __CWD1:
0003e4 2f6f      	MOV  R22,R31
0003e5 0f66      	ADD  R22,R22
0003e6 0b66      	SBC  R22,R22
0003e7 2f76      	MOV  R23,R22
0003e8 9508      	RET
                 
                 __GETW1P:
0003e9 91ed      	LD   R30,X+
0003ea 91fc      	LD   R31,X
0003eb 9711      	SBIW R26,1
0003ec 9508      	RET
                 
                 __GETW1PF:
0003ed 9005      	LPM  R0,Z+
0003ee 91f4      	LPM  R31,Z
0003ef 2de0      	MOV  R30,R0
0003f0 9508      	RET
                 
                 __PUTPARD1:
0003f1 937a      	ST   -Y,R23
0003f2 936a      	ST   -Y,R22
0003f3 93fa      	ST   -Y,R31
0003f4 93ea      	ST   -Y,R30
0003f5 9508      	RET
                 
                 __SAVELOCR6:
0003f6 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003f7 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003f8 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003f9 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003fa 931a      	ST   -Y,R17
0003fb 930a      	ST   -Y,R16
0003fc 9508      	RET
                 
                 __LOADLOCR6:
0003fd 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003fe 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003ff 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000400 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000401 8119      	LDD  R17,Y+1
000402 8108      	LD   R16,Y
000403 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  27 r18:  29 r19:   8 r20:   9 r21:  17 r22:  11 r23:   2 
r24:  12 r25:   3 r26: 126 r27:  46 r28:  21 r29:   1 r30: 187 r31:  75 
x  :  23 y  : 211 z  :  16 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   4 
adiw  :  30 and   :   0 andi  :  10 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  19 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   1 brmi  :   1 brne  :  25 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  88 
cbi   :  10 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   9 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  34 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   8 inc   :   2 jmp   :  28 ld    :  23 ldd   :  97 ldi   :  88 
lds   :   0 lpm   :  16 lsl   :   0 lsr   :   0 mov   :  21 movw  :  18 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   2 
ori   :   8 out   :  11 pop   :   3 push  :   3 rcall :  16 ret   :  32 
reti  :   0 rjmp  :  64 rol   :   0 ror   :   0 sbc   :   2 sbci  :   2 
sbi   :   9 sbic  :   0 sbis  :   0 sbiw  :  23 sbr   :   0 sbrc  :   3 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  66 std   :  51 sts   :   2 sub   :   1 subi  :  16 swap  :   2 
tst   :   4 wdr   :   1 
Instructions used: 57 out of 116 (49.1%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000808   2018     38   2056   32768   6.3%
[.dseg] 0x000060 0x000264      0      4      4    2048   0.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 3 warnings
